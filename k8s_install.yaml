- hosts: all
  become: true
  tasks:
  - name: Prerequisites packages Install to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status
  - name: Configureing Cgroup Driver
    copy:
      content: '{    "exec-opts": ["native.cgroupdriver=systemd"]}'
      dest: /etc/docker/daemon.json
  - name: Restart docker
    service:
      name: docker
      daemon_reload: yes
      state: restarted
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries in Server
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet=1.22.1-00
        - kubeadm=1.22.1-00
        - kubectl=1.22.1-00

  - name: Kubelet Service restart task for Handler
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

- hosts: master
  become: true
  tasks:
  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --pod-network-cidr=192.168.0.0/16
    environment:
      https_proxy: ""
  - name: Setup kubeconfig for {{ username }} user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/{{ username }}/.kube
     - cp -i /etc/kubernetes/admin.conf /home/{{ username }}/.kube/config
     - chown {{ username }}:{{ username }} /home/{{ username }}/.kube/config

  - name: Untaint master to deploy Workloads
    command: kubectl taint node --kubeconfig /home/{{ username }}/.kube/config --all node-role.kubernetes.io/master:NoSchedule-
    become: true
    tags: multi_k8ss
    environment:
      https_proxy: ""
  - name: Install cni pod network
    command: kubectl create --kubeconfig /home/{{ username }}/.kube/config -f {{ cnifilepath }}
    tags: cni
    environment:
      https_proxy: ""

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command
    environment:
      https_proxy: ""
  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
  handlers:
    - name: docker status
      service: name=docker state=started

- hosts: worker
  become: true
  tasks:
  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777
    tags: wrk_k8s
  - name: Join the node to cluster
    command: sh /tmp/join-command.sh
    tags: wrk_k8s
    environment:
      https_proxy: ""
  handlers:
    - name: docker status
      service: name=docker state=started